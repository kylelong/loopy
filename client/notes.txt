FRONTEND
--------
/ - landing page (logged out)

/ - home page (logged in)
    see list of songs people are adding all over
    filter by genra / platform 

/{username}
    shows songs
    favorite song of all time ?
    favorite song right now ?
    favorite genre
    current location? (so ppl know where you are listening from)
/

supports youtube, spotify, soundclound, apple music
soundcloud -> enter link and embed with GET call to https://soundcloud.com/oembed more info: https://developers.soundcloud.com/docs/oembed


BACKEND
-------
users: uid, email, username, created_at, favorite_artist, favorite_genre, favorite_song, location, current_favorite_song

songs: id, user_id, created_at, title, genre, songLink, src (youtube, soundcloud, etc), embedUrl, location (from users location if it exists)
 get src from parsing host

"songs that you want to hear for the first time again" 

TODO: 
soundcloud api 
carousel of default songs 
    arrow-left-circle
    arrow-right-circle
    

 songs for me
 e coli - soundcloud
 mr t - youtube 
 happy house - soundcloud
 get money - youtube 
 yns - spotify 
 late - spotify
 stars misplace - youtube 
 z4l - soundcloud
 chopin largo sonata - spotify
 stars misplaced - youtube 
 whats wrong 
 type money - spotify 
 sunday school - youtube 
 come on home - spotify 
 then i dip - soundcloud
 lil got it no help - soundcloud 
 donâ€™t i - spotify
do you love what you feel - spotify 
just knee deep - 


documentation / resources: 

https://stackoverflow.com/a/15979390


homepage

(globe-europe-africa) see what people are listening to: 
happy house (house) soundcloud
funkadelic (funk) youtube
z4l hip-homepage soundclound
chopin - classic spotify 
truckers atlas - modest mouse (rock) spotify 
late kanye 

spirder cider - the oh sees rock
sza - sos
sideways here we come - die! die! die! youtube 
g perico hurricane - https://soundcloud.com/g-perico-1/g-perico-hurricane?si=a9b5daee1a454eeab5dbc45acdb6c505&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing 
el negro zumbon- https://soundcloud.com/noonej/1-silvana-mangano-anna-el-negro-zumbon
baby birkin - spotify 

camphor mfdoom 
erykah badu didnt cha know
follow god kanye 

 (arrow-up-tray) share the songs you really love:
upload a link to your all-time favorite songs
the kind of songs when you first heard it
you listened to it on repeat for 3 days straight
we currently support: soundcloud, youtube, and spotify


 (magnifying-glass) explore songs from 50+ genres 
different genres, all kinds of artist from all over. 


(play-circle) find your new favorite songs
if someone else really loves it, there is a 
chance you do to (cross fingers emoji)

LOGIN / SIGNUP:

LOGIN:
email: blank, does not exists 
password: blank, is wrong 

SIGNUP:
email: blank, already exists
password: blank, not strong enough

SUPABASE CALLS:

LOGIN:
    - check if email exists from users table
    - log user in via auth 

SIGNUP:
    REGEX: email format
    - check if email exists from users table
    - insert email into user table
    - register user via auth
    

ACCOUNT: 
    - update users table with username, favorite_song, favorite_genre, favorite_artist, current_favorite_song, location updateUser(column, value)

SHARE:
    - insert into songs table on song share creation 
    - read from songs and put embed_url in iframe

create table
  public.users (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    username character varying null default ''::character varying,
    email character varying null default ''::character varying,
    favorite_song text null default ''::text,
    favorite_genre character varying null default ''::character varying,
    location character varying null default ''::character varying,
    favorite_artist character varying null default ''::character varying,
    current_favorite_song text null default ''::text,
    constraint users_pkey primary key (id),
    constraint users_email_key unique (email),
    constraint users_username_key unique (username)
  ) tablespace pg_default;



PATTERNS
have client and server in seperate folders
list of packages to install for client & server
.env in client/src
env files in server folder:
development.env
production.env

scripts in package.json in client/src
  "scripts": {
    "start": "react-scripts start",
    "build": "REACT_APP_NODE_ENV=production NODE_ENV=production react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "deploy": "npm run build",
    "dev": "REACT_APP_NODE_ENV=development NODE_ENV=development react-scripts start",
    "prod": "REACT_APP_NODE_ENV=production NODE_ENV=production react-scripts start"
  
  base .gitignore file 

client:
  npm install axios styled-components radix-ui
server:
  npm install express pg dotenv body-parser cors nodemon

  RUNNING:
  server: NODE_ENV=development npx nodemon index
  client: npm run dev



    const fetchFavorites = useCallback(async () => {
    try {
      const response = await axios.get(`${SERVER_ENDPOINT}/get_favorites`);
      return response.data;
    } catch (err) {
      console.error(err);
    }
  }, []);

  function compareCreatedAt(
    a: {created_at: string},
    b: {created_at: string}
  ): number {
    const dateA = new Date(a.created_at);
    const dateB = new Date(b.created_at);

    return dateB.getTime() - dateA.getTime();
  }

  TIDAL:

   <div className="tidal-border">
          <iframe
            src="https://embed.tidal.com/tracks/210295090"
            allowFullScreen
            frameBorder="0"
            title="yoo"
            className="tidal-embed-iframe"
          ></iframe>
        </div>